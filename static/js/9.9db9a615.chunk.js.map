{"version":3,"sources":["components/InfoPage/Button.tsx","apis/useFetchWatchInfo.ts","apis/useFetchSource.ts","hooks/useQueryParams.ts","components/WatchPage/Video.tsx","components/WatchPage/EpisodeButton.tsx","hooks/useDevice.ts","hooks/useOrientation.ts","pages/Watch.tsx"],"names":["ButtonRaw","props","className","iconSize","iconClassName","StartIcon","startIcon","EndIcon","endIcon","buttonProps","classNames","size","children","Button","onClick","to","disabled","useFetchWatchInfo","slug","useQuery","getWatchInfo","useFetchSource","hash","id","enabled","getSource","useQueryParams","location","useLocation","URLSearchParams","search","isListening","hlsConfig","xhrSetup","xhr","url","API_URL","open","Plyr","options","source","onReady","rest","videoSource","sources","src","innerRef","useRef","hls","Hls","videoOptions","quality","default","createPlayer","plyrPlayer","PlyrJS","current","plyr","on","event","window","screen","orientation","lock","Events","MANIFEST_LOADED","levels","length","height","map","level","forced","onChange","forEach","levelIndex","currentLevel","useEffect","includes","isSupported","loadSource","attachMedia","startLoad","currentTime","ref","addButton","button","position","controls","document","querySelector","div","createElement","controlsChildNodes","childNodes","insertBefore","ReactDOM","render","displayName","defaultProps","iconPrefix","iconUrl","i18n","restart","rewind","play","pause","fastForward","seek","seekLabel","played","buffered","duration","volume","mute","unmute","enableCaptions","disableCaptions","download","enterFullscreen","exitFullscreen","frameTitle","captions","settings","menuBack","speed","normal","loop","React","memo","prevProps","nextProps","EpisodeButton","useParams","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","episodes","episode","index","Item","activeIndex","useDevice","useState","width","setWidth","handleWindowSizeChange","addEventListener","removeEventListener","isMobile","isDesktop","ORIENTATION","useOrientation","setOrientation","findOrientation","matchMedia","matches","isLandscape","isPortrait","Watch","navigate","useNavigate","item2","useSelector","state","find","item","dispatch","useDispatch","info","data","isInfoLoading","isLoading","final","setFinal","setEpisodeIndex","name","findIndex","setPause","showNextEpButton","setShowNextEpButton","showPauseScreen","setShowPauseScreen","showOrientationScreen","setShowOrientationScreen","episodeIndex","currentEpisode","isSourceLoading","useMemo","type","autoplay","handleEpisodeClick","_episode","i","payload","handleNextEpisodeClick","handlePrevEpisodeClick","scroll","Loader","Video","player","_event","component","GrChapterNext","GrChapterPrevious","remainingTime","Math","round","visibilityState","setTimeout","timeoutSeconds","FaPlay","alt","onMouseEnter","title","description"],"mappings":"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","file":"static/js/9.9db9a615.chunk.js","sourcesContent":["import classNames from \"classnames\";\r\nimport { To } from \"history\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Icon } from '../../types';\r\n\r\ninterface ButtonRawProps extends React.HTMLAttributes<HTMLButtonElement> {\r\n  startIcon?: React.ComponentType<Icon>;\r\n  endIcon?: React.ComponentType<Icon>;\r\n  iconSize?: number;\r\n  iconClassName?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\ninterface ButtonProps extends ButtonRawProps {\r\n  onClick?: () => void;\r\n  to?: To;\r\n}\r\n\r\nconst ButtonRaw = (props: ButtonRawProps) => {\r\n\r\n  const {\r\n    className,\r\n    iconSize = 25,\r\n    iconClassName,\r\n    startIcon: StartIcon,\r\n    endIcon: EndIcon,\r\n\r\n    ...buttonProps\r\n  } = props;\r\n\r\n\r\n  return (\r\n    <button\r\n      className={classNames(\r\n        \"flex items-center px-4 py-2 rounded-md font-medium text-xs md:text-sm lg:text-base hover:bg-opacity-80\",\r\n        className\r\n      )}\r\n      {...buttonProps}\r\n    >\r\n      {StartIcon && (\r\n        <StartIcon\r\n          size={iconSize}\r\n          className={classNames(\"mr-2\", iconClassName)}\r\n        />\r\n      )}\r\n      {props.children}\r\n      {EndIcon && (\r\n        <EndIcon\r\n          size={iconSize}\r\n          className={classNames(\"ml-2\", iconClassName)}\r\n        />\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst Button = (props: ButtonProps) => {\r\n\r\n  const { onClick, to, disabled, ...buttonProps } = props;\r\n\r\n  return to ? (\r\n    <Link to={disabled ? '#' : to}>\r\n      <ButtonRaw {...buttonProps} onClick={onClick} />\r\n    </Link>\r\n  ) : (\r\n    <ButtonRaw {...buttonProps} onClick={onClick} />\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { getWatchInfo } from \"./anime\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nconst useFetchWatchInfo = (slug: string) => useQuery([\"watch-info\", slug], () => getWatchInfo(slug));\r\n\r\nexport default useFetchWatchInfo;","import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { getSource } from './anime';\r\n\r\nconst useFetchSource = (\r\n    hash?: string,\r\n    id?: number,\r\n    enabled?: boolean\r\n) => {\r\n    return useQuery(['source', { hash, id }], () => getSource(hash!, id!), { enabled })\r\n};\r\n\r\nexport default useFetchSource;","import { useLocation } from \"react-router-dom\"\r\n\r\nconst useQueryParams = () => {\r\n    const location = useLocation();\r\n\r\n    const params = new URLSearchParams(location.search);\r\n\r\n    return params;\r\n}\r\n\r\nexport default useQueryParams;","import PlyrJS, { Options, PlyrEvent as PlyrJSEvent, SourceInfo } from \"plyr\";\r\nimport React, { HTMLProps, MutableRefObject, useEffect, useRef } from \"react\";\r\nimport Hls, { HlsConfig } from \"hls.js\";\r\nimport { API_URL } from \"../../constants\";\r\nimport classNames from \"classnames\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"plyr/dist/plyr.css\"\r\n\r\nexport type PlyrInstance = PlyrJS;\r\nexport type PlyrEvent = PlyrJSEvent;\r\nexport type PlyrCallback = (this: PlyrJS, event: PlyrEvent) => void;\r\n\r\nexport type PlyrControlButton = string | JSX.Element;\r\n\r\nexport type PlyrProps = HTMLProps<HTMLVideoElement> & {\r\n    source?: SourceInfo;\r\n    options?: Options;\r\n    onReady?: (player: PlyrJS, event: PlyrJS.PlyrEvent) => void;\r\n};\r\n\r\nexport interface HTMLPlyrVideoElement {\r\n    plyr?: PlyrInstance;\r\n}\r\n\r\nlet isListening = false;\r\n\r\nconst hlsConfig: Partial<HlsConfig> = {\r\n    xhrSetup: (xhr, url) => {\r\n        url = `${API_URL}/cors/${url}`;\r\n        xhr.open(\"GET\", url, true);\r\n    },\r\n};\r\n\r\nconst Plyr: React.FC<PlyrProps> = (props) => {\r\n    const { options = null, source, onReady, ...rest } = props;\r\n    const videoSource = source?.sources[0].src!;\r\n\r\n    const innerRef = useRef<HTMLPlyrVideoElement>();\r\n    const hls = useRef(new Hls(hlsConfig));\r\n\r\n    const videoOptions: PlyrJS.Options = {\r\n        ...options,\r\n        quality: {\r\n            default: 1080,\r\n            options: [1080],\r\n        },\r\n    };\r\n\r\n    const createPlayer = () => {\r\n        isListening = false;\r\n\r\n        const plyrPlayer = new PlyrJS(\".plyr-react\", videoOptions);\r\n\r\n        if (innerRef.current?.plyr) {\r\n            innerRef.current.plyr = plyrPlayer;\r\n        }\r\n\r\n        plyrPlayer.on(\"ready\", (event) => {\r\n            if (isListening) return;\r\n\r\n            isListening = true;\r\n\r\n            if (onReady) {\r\n                onReady(plyrPlayer, event);\r\n            }\r\n\r\n            plyrPlayer.on(\"enterfullscreen\", () => {\r\n                window.screen.orientation.lock(\"landscape\");\r\n            });\r\n        });\r\n    };\r\n\r\n    hls.current.on(Hls.Events.MANIFEST_LOADED, () => {\r\n        videoOptions.quality = {\r\n            default: hls.current.levels[hls.current.levels.length - 1].height,\r\n            options: hls.current.levels.map((level) => level.height),\r\n            forced: true,\r\n            // Manage quality changes\r\n            onChange: (quality: number) => {\r\n                hls.current.levels.forEach((level, levelIndex) => {\r\n                    if (level.height === quality) {\r\n                        hls.current.currentLevel = levelIndex;\r\n                    }\r\n                });\r\n            },\r\n        };\r\n\r\n        createPlayer();\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!innerRef.current) return;\r\n\r\n        if (videoSource.includes(\"m3u8\") && Hls.isSupported()) {\r\n            hls.current.loadSource(source?.sources[0].src!);\r\n            hls.current.attachMedia(innerRef.current as HTMLMediaElement);\r\n\r\n            innerRef.current.plyr?.on(\"play\", () => hls.current.startLoad());\r\n\r\n            innerRef.current.plyr?.on(\"qualitychange\", () => {\r\n                if (innerRef.current?.plyr?.currentTime !== 0) {\r\n                    hls.current.startLoad();\r\n                }\r\n            });\r\n        } else {\r\n            createPlayer();\r\n        }\r\n\r\n        if (innerRef.current?.plyr && source) {\r\n            innerRef.current.plyr.source = source;\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [videoOptions]);\r\n\r\n    return (\r\n        <video\r\n            ref={innerRef as unknown as MutableRefObject<HTMLVideoElement>}\r\n            className=\"plyr-react plyr\"\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nexport const addButtons = (\r\n    buttons: {\r\n        component: JSX.Element;\r\n        position?: number;\r\n        className?: string;\r\n    }[]\r\n) => {\r\n    buttons.forEach(({ component, position = -1, className }) =>\r\n        addButton(component, position, className)\r\n    );\r\n};\r\n\r\nconst addButton = (\r\n    button: JSX.Element,\r\n    position: number,\r\n    className?: string\r\n) => {\r\n    const controls = document.querySelector(\".plyr__controls\");\r\n    const div = document.createElement(\"div\");\r\n    div.className = classNames(\"plyr__controls__item plyr__control\", className);\r\n\r\n    const controlsChildNodes = controls?.childNodes;\r\n\r\n    if (controlsChildNodes) {\r\n        controls?.insertBefore(\r\n            div,\r\n            position < 0\r\n                ? controlsChildNodes[controlsChildNodes?.length! - 1]\r\n                : controlsChildNodes[position - 1]\r\n        );\r\n\r\n        ReactDOM.render(button, div);\r\n    }\r\n};\r\n\r\nPlyr.displayName = \"Plyr\";\r\n\r\nPlyr.defaultProps = {\r\n    options: {\r\n        iconPrefix: \"plyr\",\r\n        iconUrl: \"/plyr.svg\",\r\n        i18n: {\r\n            restart: \"Xem lại\",\r\n            rewind: \"Lùi {seektime} giây\",\r\n            play: \"Xem\",\r\n            pause: \"Dừng\",\r\n            fastForward: \"Tiến {seektime} giây\",\r\n            seek: \"Tua\",\r\n            seekLabel: \"{currentTime} / {duration}\",\r\n            played: \"Đã chạy\",\r\n            buffered: \"Đã load\",\r\n            currentTime: \"Thời gian hiện tại\",\r\n            duration: \"Thời lượng\",\r\n            volume: \"Âm lượng\",\r\n            mute: \"Tắt âm lượng\",\r\n            unmute: \"Mở âm lượng\",\r\n            enableCaptions: \"Mở phụ đề\",\r\n            disableCaptions: \"Tắt phụ đề\",\r\n            download: \"Tải xuống\",\r\n            enterFullscreen: \"Mở toàn màn hình\",\r\n            exitFullscreen: \"Thoát toàn màn hình\",\r\n            frameTitle: \"Video {title}\",\r\n            captions: \"Phụ đề\",\r\n            settings: \"Cài đặt\",\r\n            menuBack: \"Trở về menu\",\r\n            speed: \"Tốc độ\",\r\n            normal: \"Bình thường\",\r\n            quality: \"Chất lượng video\",\r\n            loop: \"Lặp\",\r\n        },\r\n        controls: [\r\n            \"play-large\",\r\n            \"play\",\r\n            \"rewind\",\r\n            \"fast-forward\",\r\n            \"progress\",\r\n            \"current-time\",\r\n            \"mute\",\r\n            \"volume\",\r\n            \"settings\",\r\n            \"fullscreen\",\r\n        ],\r\n    },\r\n};\r\n\r\nPlyr.propTypes = {\r\n    options: PropTypes.object,\r\n    source: PropTypes.any,\r\n};\r\n\r\nexport default React.memo(\r\n    Plyr,\r\n    (prevProps: PlyrProps, nextProps: PlyrProps) => {\r\n        return (\r\n            prevProps.source?.sources[0].src === nextProps.source?.sources[0].src\r\n        );\r\n    }\r\n);","import React, { Fragment } from \"react\";\r\nimport { Menu, Transition } from \"@headlessui/react\";\r\nimport { ImStack } from \"react-icons/im\";\r\nimport classNames from \"classnames\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\ninterface EpisodeButtonProps {\r\n    episodes: string[];\r\n    onClick?: (\r\n        episode: EpisodeButtonProps[\"episodes\"][number],\r\n        index: number\r\n    ) => void;\r\n    activeIndex?: number;\r\n}\r\nconst EpisodeButton = (props: EpisodeButtonProps) => {\r\n    const { slug } = useParams();\r\n\r\n    return (\r\n        <Menu>\r\n            <Menu.Button>\r\n                <ImStack />\r\n            </Menu.Button>\r\n            <Transition\r\n                as={Fragment}\r\n                enter=\"transition ease-out duration-100\"\r\n                enterFrom=\"transform opacity-0 scale-95\"\r\n                enterTo=\"transform opacity-100 scale-100\"\r\n                leave=\"transition ease-in duration-75\"\r\n                leaveFrom=\"transform opacity-100 scale-100\"\r\n                leaveTo=\"transform opacity-0 scale-95\"\r\n            >\r\n                <Menu.Items className=\"rounded-md text-white overflow-y-scroll absolute right-0 bottom-full py-6 max-h-96 w-106 my-2 origin-top-right bg-background shadow-lg focus:outline-none\">\r\n                    <h1 className=\"text-white font-medium mb-3\">Tập phim</h1>\r\n                    <div className=\"w-full flex flex-wrap justify-center\">\r\n                        {props.episodes.map((episode, index) => (\r\n                            <Menu.Item\r\n                                key={index}\r\n                                as=\"button\"\r\n                                className={classNames(\r\n                                    \"py-3 px-4 block rounded-md m-1 w-full hover:bg-opacity-80\",\r\n                                    index === props.activeIndex\r\n                                        ? \"bg-primary text-white\"\r\n                                        : \"bg-background-lighter\"\r\n                                )}\r\n                                onClick={() => {\r\n                                    props?.onClick?.(episode, index);\r\n                                }}\r\n                            >\r\n                                {episode}\r\n                            </Menu.Item>\r\n                        ))}\r\n                    </div>\r\n                </Menu.Items>\r\n            </Transition>\r\n        </Menu>\r\n    );\r\n};\r\n\r\nexport default EpisodeButton;","import { useEffect, useState } from \"react\";\r\n\r\nconst useDevice = () => {\r\n    const [width, setWidth] = useState<number>(window.screen.width);\r\n\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.screen.width);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", handleWindowSizeChange);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleWindowSizeChange);\r\n        };\r\n    }, []);\r\n\r\n    const isMobile = width <= 768;\r\n    const isDesktop = width > 768;\r\n\r\n    return { isMobile, isDesktop };\r\n};\r\n\r\nexport default useDevice;","import { useEffect, useState } from \"react\";\r\n\r\nconst ORIENTATION = {\r\n    landscape: \"LANDSCAPE\",\r\n    portrait: \"portrait\",\r\n};\r\n\r\nconst useOrientation = () => {\r\n    const [orientation, setOrientation] = useState<string>(ORIENTATION.portrait);\r\n\r\n    useEffect(() => {\r\n        const findOrientation = () => {\r\n            if (window.matchMedia(\"(orientation: portrait)\").matches) {\r\n                setOrientation(ORIENTATION.portrait);\r\n            }\r\n\r\n            if (window.matchMedia(\"(orientation: landscape)\").matches) {\r\n                setOrientation(ORIENTATION.landscape);\r\n            }\r\n        };\r\n\r\n        window.addEventListener(\"resize\", findOrientation);\r\n\r\n        findOrientation();\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", findOrientation);\r\n        };\r\n    }, []);\r\n\r\n    return {\r\n        isLandscape: orientation === ORIENTATION.landscape,\r\n        isPortrait: orientation === ORIENTATION.portrait,\r\n    }\r\n};\r\n\r\nexport default useOrientation;","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport useFetchSource from '../apis/useFetchSource';\r\nimport useFetchWatchInfo from '../apis/useFetchWatchInfo';\r\nimport useQueryParams from '../hooks/useQueryParams';\r\nimport { Options, SourceInfo } from 'plyr';\r\nimport Video, { addButtons, PlyrEvent, PlyrInstance } from \"../components/WatchPage/Video\";\r\nimport EpisodeButton from '../components/WatchPage/EpisodeButton';\r\nimport Loader from '../components/Loader/Loader';\r\nimport \"../components/WatchPage/Video.css\";\r\nimport { HiArrowNarrowLeft } from \"react-icons/hi\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport classNames from 'classnames';\r\nimport Button from '../components/InfoPage/Button';\r\nimport useDevice from '../hooks/useDevice';\r\nimport useOrientation from '../hooks/useOrientation';\r\nimport { GrChapterNext, GrChapterPrevious } from \"react-icons/gr\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../reducers';\r\nimport ProgressBarLoading from '../utils/ProgressBar';\r\n\r\nconst Watch = () => {\r\n    const { slug } = useParams();\r\n    const navigate = useNavigate();\r\n    const query = useQueryParams();\r\n    const { isDesktop } = useDevice();\r\n    const { isPortrait } = useOrientation();\r\n\r\n    const select = useSelector((state: RootState) => state);\r\n    const item2 = select.episode.find(item => item.slug == slug);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { data: info, isLoading: isInfoLoading } = useFetchWatchInfo(slug!);\r\n\r\n    const [final, setFinal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!isInfoLoading) {\r\n            setEpisodeIndex(item2.name === 'xem ngay' ? 0 : info?.episodes.findIndex(item => item.name === item2.name)!);\r\n            setFinal(true);\r\n        }\r\n    }, [isInfoLoading])\r\n\r\n    const [pause, setPause] = useState<boolean>(false);\r\n    const [showNextEpButton, setShowNextEpButton] = useState<boolean>(false);\r\n    const [showPauseScreen, setShowPauseScreen] = useState<boolean>(false);\r\n    const [showOrientationScreen, setShowOrientationScreen] = useState<boolean>(false);\r\n    const [episodeIndex, setEpisodeIndex] = useState<number>(0)//Muốn thay đổi state phải dùng set\r\n\r\n    const currentEpisode = info?.episodes[episodeIndex];\r\n\r\n    const { data: source, isLoading: isSourceLoading } = useFetchSource(currentEpisode?.hash, currentEpisode?.id, !!info);\r\n\r\n    const videoSource = useMemo<SourceInfo>(\r\n        () => ({\r\n            type: \"video\",\r\n            sources: [\r\n                {\r\n                    src: source?.source!,\r\n                },\r\n            ],\r\n        }),\r\n        [source]\r\n    );\r\n\r\n    // console.log(videoSource);\r\n\r\n\r\n    const videoOptions = useMemo<Options>(\r\n        () => ({\r\n            autoplay: true,\r\n        }),\r\n        []\r\n    );\r\n\r\n    const handleEpisodeClick = (_episode: string, i: number) => {\r\n        dispatch({ type: 'EPISODE', payload: { index: i, name: info?.episodes[i].name } });\r\n        setEpisodeIndex(i);\r\n    };\r\n    const handleNextEpisodeClick = () => {\r\n        setEpisodeIndex((i) => {\r\n            dispatch({ type: 'EPISODE', payload: { index: i + 1, name: info?.episodes[i + 1].name, slug: slug } });\r\n            return i + 1;\r\n        });\r\n\r\n    };\r\n    const handlePrevEpisodeClick = () => {\r\n        setEpisodeIndex((i) => {\r\n            dispatch({ type: 'EPISODE', payload: { index: i - 1, name: info?.episodes[i - 1].name, slug: slug } });\r\n            return i - 1;\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.scroll(0, 0);\r\n        if (isPortrait) {\r\n            setShowOrientationScreen(true);\r\n        } else {\r\n            setShowOrientationScreen(false);\r\n        }\r\n    }, [isPortrait]);\r\n\r\n    const handleReady = (player: PlyrInstance, _event: PlyrEvent) => {\r\n        addButtons([\r\n            {\r\n                component: (\r\n                    <EpisodeButton\r\n                        episodes={info?.episodes.map((episode) => episode.name)!}\r\n                        onClick={handleEpisodeClick}\r\n                        activeIndex={episodeIndex}\r\n                    />\r\n                ),\r\n                position: 6,\r\n                className: \"flex items-center justify-center\",\r\n            },\r\n            {\r\n                component: (\r\n                    <Button\r\n                        onClick={handleNextEpisodeClick}\r\n                        startIcon={GrChapterNext}\r\n                        className='p-none'\r\n                    />\r\n                ),\r\n                position: 6,\r\n                className: `flex items-center justify-center ${episodeIndex == info!.episodes.length - 1 && 'hidden'}`,\r\n            },\r\n            {\r\n                component: (\r\n                    <Button\r\n                        onClick={handlePrevEpisodeClick}\r\n                        startIcon={GrChapterPrevious}\r\n                        className={'p-none'}\r\n                    />\r\n                ),\r\n                position: 6,\r\n                className: classNames(`flex items-center justify-center`, episodeIndex == 0 && 'hidden'),\r\n            }\r\n        ]);\r\n\r\n        player.on(\"timeupdate\", () => {\r\n            const remainingTime = Math.round(player.duration - player.currentTime);\r\n            const triggerTime = 120; // Seconds\r\n\r\n            if (remainingTime <= triggerTime) {\r\n                setShowNextEpButton(true);\r\n            } else {\r\n                setShowNextEpButton(false);\r\n            }\r\n        });\r\n\r\n        player.on('pause', () => {\r\n            setPause(true);\r\n        })\r\n\r\n        if (isDesktop) {\r\n            document.addEventListener(\"visibilitychange\", () => {\r\n                if (document.visibilityState === \"visible\") {\r\n                    return;\r\n                }\r\n\r\n                const timeoutSeconds = 6;\r\n\r\n                setTimeout(\r\n                    () => setShowPauseScreen(true),\r\n                    timeoutSeconds * 1000\r\n                );\r\n            });\r\n\r\n            player.on(\"play\", () => {\r\n                setPause(false);\r\n            });\r\n        }\r\n    };\r\n\r\n    // console.log(indexSelect);\r\n    if (isInfoLoading || isSourceLoading || !final) {\r\n        return (\r\n            <div className=\"absolute flex items-center justify-center bg-background inset-0 w-screen h-screen z-50\">\r\n                <Loader />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return final && (\r\n        <div className=\"absolute bg-background inset-0 w-screen h-screen z-50 watching\">\r\n            <div className=\"relative w-full h-full\">\r\n                <Video source={videoSource} onReady={handleReady} options={videoOptions} />\r\n                <div\r\n                    className={\"absolute top-8 left-8 back \" + (pause ? \"block\" : 'hidden')}\r\n                >\r\n                    <HiArrowNarrowLeft\r\n                        size={30}\r\n                        className=\"text-gray-300 hover:text-white cursor-pointer\"\r\n                        onClick={() => navigate(-1)}\r\n                    />\r\n                    {\r\n                        <h1 className='self-center text-2xl font-bold -ml-5'>Tập {info?.episodes[episodeIndex].name}</h1>\r\n                    }\r\n                </div>\r\n\r\n                <div\r\n                    className={classNames(\r\n                        \"absolute bottom-20 right-10\",\r\n                        showNextEpButton ? ((episodeIndex !== info!.episodes.length - 1) ? 'block' : 'hidden') : \"hidden\"\r\n                    )}\r\n                >\r\n                    <Button\r\n                        onClick={handleNextEpisodeClick}\r\n                        startIcon={FaPlay}\r\n                        className=\"shadow-lg bg-white text-black\"\r\n                    >\r\n                        Tập tiếp theo\r\n                    </Button>\r\n                </div>\r\n\r\n                <div\r\n                    className={classNames(\r\n                        \"absolute inset-0 bg-black bg-opacity-90 flex flex-col items-center justify-center\",\r\n                        !showOrientationScreen ? \"hidden\" : \"block\"\r\n                    )}\r\n                >\r\n                    <img\r\n                        src=\"/rotate_landscape.gif\"\r\n                        alt=\"Please rotate your device to landscape\"\r\n                    />\r\n\r\n                    <h1 className=\"text-center text-white text-xs sm:text-sm font-medium\">\r\n                        Chuyển sang chế độ ngang để có trải nghiệm tốt nhất.\r\n                    </h1>\r\n                </div>\r\n\r\n                <div\r\n                    className={classNames(\r\n                        \"absolute inset-0 bg-black bg-opacity-90 px-40 flex flex-col space-y-6 justify-center\",\r\n                        !showPauseScreen ? \"hidden\" : \"block\"\r\n                    )}\r\n                    onMouseEnter={() => {\r\n                        if (isDesktop && showPauseScreen) {\r\n                            setShowPauseScreen(false);\r\n                        }\r\n                    }}\r\n                >\r\n                    <div className=\"space-y-2\">\r\n                        <h1 className=\"text-gray-400 font-medium text-lg\">Bạn đang xem</h1>\r\n                        <h1 className=\"text-white font-bold text-5xl\">{info?.title}</h1>\r\n                        <h1 className=\"text-white font-bold text-2xl\">Tập {info?.episodes[episodeIndex].name}</h1>\r\n                    </div>\r\n\r\n                    <h1 className=\"text-gray-500 text-base font-medium line-clamp-3\">\r\n                        {info?.description}\r\n                    </h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Watch;"],"sourceRoot":""}