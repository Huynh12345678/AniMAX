{"version":3,"sources":["utils/ProgressBar.tsx","components/HomePage/TextIcon.tsx","components/BrowserPage/AnimeCard.tsx","components/HomePage/Carousel.tsx","components/InfoPage/Button.tsx","apis/useFetchWatchInfo.ts","components/HomePage/Carousel2.tsx","components/HomePage/Section.tsx","apis/useFetchInfo.ts","pages/Info.tsx"],"names":["ProgressBar","config","barColors","ProgressBarLoading","TextIcon","props","iconSize","Icon","icon","className","iconClassName","textClassName","text","classNames","size","AnimeCard","pathname","useLocation","isSliding","useSelector","state","sliding","conditions","conditions2","to","slug","onClick","e","event","preventDefault","onError","target","src","handleError","image","alt","title","classNameImg","isUpcoming","upcomingYear","AiFillStar","stars","toString","some","el","time","includes","currentEpisode","style","quality","isCompleted","BiTime","date","AiOutlineCalendar","views","GrView","toLocaleString","description","NextArrow","borderRadius","position","top","transform","PrevArrow","Carousel","defaultSettings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","autoplay","beforeChange","dispatch","type","payload","afterChange","settings","useDispatch","children","ButtonRaw","StartIcon","startIcon","EndIcon","endIcon","buttonProps","Button","disabled","useFetchWatchInfo","useQuery","getWatchInfo","Carousel2","responsive","breakpoint","data","finalSettings","map","anime","Section","isLoading","useFetchInfo","getInfo","Pair","pairKey","pairValue","onValue","index","arr","path","name","length","altName","Array","isArray","value","Info","useParams","select","item","viewMore","find","item2","episode","navigate","useNavigate","useState","setViewMore","info","final","setFinal","infoWatch","isInfoLoading","useEffect","imageCount","imagesLoaded","i","hihi","Image","haha","backgroundImage","images","onload","allLoaded","onerror","window","scroll","document","altTitle","genres","genre","episodes","BsPlayFill","id","showtime","status","directors","nations","followers","rating","language","studio","seasons","includedParts","relatedAnime","Loader"],"mappings":"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","file":"static/js/7.3dd60089.chunk.js","sourcesContent":["import ProgressBar from \"react-topbar-progress-indicator\";\r\n\r\nProgressBar.config({\r\n    barColors: {\r\n        \"0\": \"#ff0000\",\r\n    },\r\n});\r\n\r\nconst ProgressBarLoading = () => {\r\n    return <ProgressBar />;\r\n};\r\n\r\nexport default ProgressBarLoading;","import React from 'react';\r\nimport classNames from \"classnames\";\r\n\r\ninterface TextIconProps {\r\n    className?: string;\r\n    textClassName?: string;\r\n    iconClassName?: string;\r\n    icon: React.ComponentType<{ className?: string; size: number }>;\r\n    text: string;\r\n    iconSize?: number;\r\n}\r\n\r\nconst TextIcon = (props: TextIconProps) => {\r\n    const {\r\n        iconSize = 16,\r\n        icon: Icon,\r\n        className,\r\n        iconClassName,\r\n        textClassName,\r\n        text,\r\n    } = props;\r\n\r\n    return (\r\n        <div className={classNames(\"flex items-center\", className)}>\r\n            <Icon size={iconSize} className={iconClassName} />\r\n            <p className={classNames(\"line-clamp-1 pl-1 pt-0.5\", textClassName)}>{text}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextIcon;","import classNames from 'classnames';\r\nimport { AiFillStar, AiOutlineCalendar } from 'react-icons/ai';\r\nimport { BiTime } from 'react-icons/bi';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { RootState } from '../../reducers';\r\nimport { Anime } from '../../types';\r\nimport TextIcon from '../HomePage/TextIcon';\r\nimport { useSelector } from 'react-redux';\r\nimport { BsPlayCircle } from 'react-icons/bs';\r\nimport { GrView } from 'react-icons/gr';\r\n\r\ninterface AnimeCardProps extends Anime {\r\n    className?: string;\r\n    onClick?: () => void;\r\n    classNameImg?: string;\r\n}\r\nconst AnimeCard = (props: AnimeCardProps) => {\r\n    const { pathname } = useLocation();\r\n\r\n    const isSliding: boolean = useSelector((state: RootState) => state.sliding);\r\n    const handleOnClick = (event: any) => {\r\n        if (isSliding) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n    const conditions = [\"giờ\", \"phút\", \"Giờ\", \"Phút\"];\r\n    const conditions2 = [\"HD\", \"BD\", \"FHD\"];\r\n    const handleError = (e: any) => {\r\n        e.target.src = '/default.png';\r\n    }\r\n\r\n    return (\r\n        <Link to={`/info/${props.slug}`} onClick={e => handleOnClick(e)}>\r\n            <div className={classNames(\"relative shadow-lg group\", props.className)}>\r\n                <img\r\n                    onError={(e) => handleError(e)}\r\n                    src={props.image}\r\n                    alt={props.title}\r\n                    className={classNames(\r\n                        \"w-full h-48 md:h-60 object-cover rounded-md rounded-b-none\",\r\n                        props.classNameImg ? props.classNameImg : 'lg:h-80'\r\n                    )}\r\n                // loading='lazy'\r\n                />\r\n\r\n                {props.isUpcoming && (\r\n                    <div className=\"absolute inset-0 bg-black bg-opacity-60 flex items-center justify-center\">\r\n                        <p className=\"text-white text-3xl font-bold\">\r\n                            {props.upcomingYear}\r\n                        </p>\r\n                        <h1 className='font-bold z-10 absolute bottom-0 p-2 bg-red-500 w-full text-center bg-opacity-80'>SẮP CHIẾU</h1>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"absolute inset-0 invisible group-hover:visible bg-black bg-opacity-60 flex items-center justify-center\">\r\n                    <BsPlayCircle size={70} className=\"text-white\" />\r\n                </div>\r\n\r\n                <div className=\"absolute top-2 z-10 left-2 bg-black px-3 py-1 rounded-2xl text-white text-xs bg-opacity-70\">\r\n                    <TextIcon icon={AiFillStar} text={props.stars.toString()} className='text-base text-yellow-200'></TextIcon>\r\n                </div>\r\n                {\r\n                    !props.isUpcoming && <div className={classNames(\"absolute top-2 right-2 text-white text-xs text-center\", conditions.some(el => props.time?.includes(el)) || props.currentEpisode === '' || conditions2.some(el => props.currentEpisode?.includes(el)) ? ' bg-three rounded-md w-auto px-2' : 'bg-red-500 rounded-full w-12 px-1 pt-3 py-1 h-12')} style={{ \"lineHeight\": '0.5em' }}>\r\n                        {\r\n                            conditions.some(el => props.time?.includes(el)) || props.currentEpisode === '' || conditions2.some(el => props.currentEpisode?.includes(el)) ?\r\n                                <span className='text-base text-black font-thin'>{props.quality || props.currentEpisode}</span>\r\n                                :\r\n                                (props.isCompleted) ?\r\n                                    <>HOÀN <span className='font-bold text-lg'>TẤT</span></>\r\n                                    :\r\n                                    <>TẬP <span className='font-bold text-lg'>{props.currentEpisode}</span></>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div\r\n                className={classNames(\r\n                    \"bg-background-darker p-3 w-full space-y-2 rounded-b-md\",\r\n                    pathname.includes('info') ? 'max-h-20 min-h-5' : 'max-h-20 min-h-11'\r\n                )}\r\n            >\r\n                <p className={classNames(\"uppercase text-white font-bold text-sm hover:text-three\", pathname.includes('info') ? 'line-clamp-2' : 'line-clamp-1')} title={props.title}>\r\n                    {props.title}\r\n                </p>\r\n\r\n                <div className=\"space-y-1\">\r\n                    <div className=\"flex items-center\">\r\n                        {/* <TextIcon\r\n                            icon={AiFillStar}\r\n                            iconClassName=\"text-yellow-400 mr-1\"\r\n                            text={props.stars.toString()}\r\n                            textClassName=\"text-yellow-400 text-xs\"\r\n                            iconSize={12}\r\n                        /> */}\r\n\r\n                        {props.time && (\r\n                            <TextIcon\r\n                                // className=\"ml-2\"\r\n                                icon={BiTime}\r\n                                iconClassName=\"text-gray-400 mr-1\"\r\n                                text={props.time.includes('Chưa') ? '...' : props.time}\r\n                                textClassName=\"text-white text-xs\"\r\n                                iconSize={12}\r\n                            />\r\n                        )}\r\n\r\n                        <p className=\"px-2 ml-2 text-xs font-medium bg-primary text-white rounded-md mt-0.5\">\r\n                            {props.quality?.includes('Chưa') ? '?' : props.quality}\r\n                        </p>\r\n\r\n                        {props.date && (\r\n                            <TextIcon\r\n                                icon={AiOutlineCalendar}\r\n                                iconClassName=\"text-gray-400 mr-1 ml-2\"\r\n                                text={props.date}\r\n                                textClassName=\"text-white text-xs\"\r\n                                iconSize={12}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <div className='flex items-center'>\r\n                        {props.views && (\r\n                            <TextIcon\r\n                                // className=\"ml-2\"\r\n                                icon={GrView}\r\n                                iconClassName=\"text-gray-400 mr-1\"\r\n                                text={'Lượt xem: ' + props.views.toLocaleString()}\r\n                                textClassName=\"text-white text-xs\"\r\n                                iconSize={12}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"text-gray-400 text-xs line-clamp-3\">\r\n                    {props.description}\r\n                </p>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default AnimeCard;","import React, { PropsWithChildren, useEffect } from \"react\";\r\nimport Slider, { Settings } from \"react-slick\";\r\nimport { BsChevronLeft, BsChevronRight } from \"react-icons/bs\";\r\nimport classNames from \"classnames\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\ninterface CarouselProps {\r\n    settings?: Settings;\r\n}\r\n\r\ninterface ArrowButtonProps {\r\n    onClick?: () => void;\r\n}\r\n\r\nfunction NextArrow(props: ArrowButtonProps) {\r\n    const { onClick } = props;\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                \"bg-black -right-6 transform p-3 cursor-pointer z-10\"\r\n            )}\r\n            style={{\r\n                borderRadius: \"50%\",\r\n                position: 'absolute',\r\n                top: ' 46%',\r\n                transform: 'translate(0, -50%)'\r\n            }}\r\n            onClick={onClick}\r\n        >\r\n            <BsChevronRight size={20} className=\"text-white hover:text-secondary\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction PrevArrow(props: ArrowButtonProps) {\r\n    const { onClick } = props;\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                \"bg-black -left-6 transform p-3 cursor-pointer z-10\"\r\n            )}\r\n            style={{\r\n                borderRadius: \"50%\",\r\n                position: 'absolute',\r\n                top: ' 46%',\r\n                transform: 'translate(0, -50%)'\r\n            }}\r\n            onClick={onClick}\r\n        >\r\n            <BsChevronLeft size={20} className=\"text-white hover:text-secondary\" />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst Carousel = (props: PropsWithChildren<CarouselProps>) => {\r\n    const defaultSettings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        nextArrow: <NextArrow />,\r\n        prevArrow: <PrevArrow />,\r\n        autoplay: true,\r\n        beforeChange: () => {\r\n            dispatch({ type: 'changeSliding', payload: true })\r\n        },\r\n        afterChange: () => {\r\n            dispatch({ type: 'changeSliding', payload: false })\r\n        }\r\n    };\r\n    const settings = { ...defaultSettings, ...props.settings };\r\n    var dispatch = useDispatch();\r\n\r\n    return <Slider {...settings}>{props.children}</Slider>;\r\n};\r\n\r\nexport default Carousel;\r\n","import classNames from \"classnames\";\r\nimport { To } from \"history\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Icon } from '../../types';\r\n\r\ninterface ButtonRawProps extends React.HTMLAttributes<HTMLButtonElement> {\r\n  startIcon?: React.ComponentType<Icon>;\r\n  endIcon?: React.ComponentType<Icon>;\r\n  iconSize?: number;\r\n  iconClassName?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\ninterface ButtonProps extends ButtonRawProps {\r\n  onClick?: () => void;\r\n  to?: To;\r\n}\r\n\r\nconst ButtonRaw = (props: ButtonRawProps) => {\r\n\r\n  const {\r\n    className,\r\n    iconSize = 25,\r\n    iconClassName,\r\n    startIcon: StartIcon,\r\n    endIcon: EndIcon,\r\n\r\n    ...buttonProps\r\n  } = props;\r\n\r\n\r\n  return (\r\n    <button\r\n      className={classNames(\r\n        \"flex items-center px-4 py-2 rounded-md font-medium text-xs md:text-sm lg:text-base hover:bg-opacity-80\",\r\n        className\r\n      )}\r\n      {...buttonProps}\r\n    >\r\n      {StartIcon && (\r\n        <StartIcon\r\n          size={iconSize}\r\n          className={classNames(\"mr-2\", iconClassName)}\r\n        />\r\n      )}\r\n      {props.children}\r\n      {EndIcon && (\r\n        <EndIcon\r\n          size={iconSize}\r\n          className={classNames(\"ml-2\", iconClassName)}\r\n        />\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst Button = (props: ButtonProps) => {\r\n\r\n  const { onClick, to, disabled, ...buttonProps } = props;\r\n\r\n  return to ? (\r\n    <Link to={disabled ? '#' : to}>\r\n      <ButtonRaw {...buttonProps} onClick={onClick} />\r\n    </Link>\r\n  ) : (\r\n    <ButtonRaw {...buttonProps} onClick={onClick} />\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { getWatchInfo } from \"./anime\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nconst useFetchWatchInfo = (slug: string) => useQuery([\"watch-info\", slug], () => getWatchInfo(slug));\r\n\r\nexport default useFetchWatchInfo;","import React, { PropsWithChildren } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Settings } from \"react-slick\";\r\nimport { Anime } from \"../../types\";\r\nimport AnimeCard from \"../BrowserPage/AnimeCard\";\r\nimport Carousel from './Carousel';\r\n\r\nimport './Carousel2.css';\r\n\r\ninterface AnimeCarouselProps {\r\n    settings?: Settings;\r\n    data?: Anime[];\r\n    onClick?: () => void;\r\n}\r\n\r\nconst Carousel2 = (props: PropsWithChildren<AnimeCarouselProps>) => {\r\n    const location = useLocation();\r\n    const defaultSettings = {\r\n        slidesToShow: location.pathname.includes('info') ? 7 : 6,\r\n        slidesToScroll: 6,\r\n        infinite: false,\r\n        dots: false,\r\n        autoplay: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 4,\r\n                },\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 3,\r\n                },\r\n            },\r\n            {\r\n                breakpoint: 600,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 2,\r\n                },\r\n            },\r\n        ],\r\n    };\r\n    const { data = [], settings, onClick } = props;\r\n    const finalSettings = { ...defaultSettings, ...settings };\r\n\r\n    return (\r\n        <Carousel settings={finalSettings}>\r\n            {\r\n                data.map(anime => (\r\n                    <AnimeCard key={anime.slug} {...anime} classNameImg=' lg:h-72' />\r\n                ))\r\n            }\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nexport default Carousel2;","import classNames from \"classnames\";\r\nimport { ImSpinner, ImSpinner2 } from \"react-icons/im\";\r\nimport { Anime } from \"../../types\";\r\nimport ProgressBarLoading from \"../../utils/ProgressBar\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Carousel2 from \"./Carousel2\";\r\n\r\ninterface SectionProps {\r\n    title: string;\r\n    data?: Anime[];\r\n    isLoading: boolean;\r\n    className?: string;\r\n    onClick?: () => void;\r\n}\r\nconst Section = (props: SectionProps) => {\r\n    const { title, data = [], isLoading = false, className = 'text-2xl font-bold', onClick } = props;\r\n\r\n    return (\r\n        <div className=\"mt-6\">\r\n            <h1 className={classNames(\"text-white font-medium mb-3 -ml-2 pl-2\", className)}>{title}</h1>\r\n            {isLoading ? <><ImSpinner2 size={20} className=\"text-white animate-spin mx-auto my-5\" /><ProgressBarLoading /></> : <Carousel2 data={data} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Section;","import { getInfo } from \"./anime\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nconst useFetchInfo = (slug: string) => {\r\n    return useQuery([\"infos\", slug], () => getInfo(slug)); //có đối số truyền vào thì viết kiểu này\r\n}\r\n\r\nexport default useFetchInfo;","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport useFetchInfo from '../apis/useFetchInfo';\r\nimport Loader from '../components/Loader/Loader';\r\nimport Button from '../components/InfoPage/Button';\r\nimport { BsPlayFill } from 'react-icons/bs';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useFetchWatchInfo from '../apis/useFetchWatchInfo';\r\nimport classNames from 'classnames';\r\nimport { RootState } from '../reducers';\r\nimport { IoIosArrowDropdownCircle, IoIosArrowDropupCircle } from 'react-icons/io';\r\nimport ProgressBarLoading from '../utils/ProgressBar';\r\nimport Section from '../components/HomePage/Section';\r\nimport { ImSpinner2 } from 'react-icons/im';\r\n\r\ninterface pairProps {\r\n    pairKey: string;\r\n    pairValue: any[] | string | undefined;\r\n    onValue?: (value: any, index: number, arr: any[], slug: string, pairKey: string) => React.ReactNode;\r\n    slug?: string;\r\n}\r\nconst Pair = ({\r\n    pairKey,\r\n    pairValue,\r\n    onValue = (data, index, arr, slug, pairKey) => {\r\n        if (data.path) {\r\n            return <Link to={data.path.includes('tag') ? `/tag/${data.slug}` : `/quoc-gia/${data.slug}`} key={index}>\r\n                <p className=\"text-three\">{data.name}{arr.length - 1 !== index ? \",\" : \"\"}&nbsp;&nbsp;</p>\r\n            </Link>\r\n        } else {\r\n            if (pairKey === 'Parts') {\r\n                return <Link to={`/info/${data.slug}`} key={index} title={data.altName}>\r\n                    <p className={(data.slug === slug ? \"text-three\" : '') + ' hover:text-three'}>{data.name}<span className='text-white'>{arr.length - 1 !== index ? \",\" : \"\"}</span>&nbsp;&nbsp;</p>\r\n                </Link>\r\n            }\r\n            return <Link to={`/seasons/${data.slug}`} key={index}>\r\n                <p className=\"text-three\">{data.name}{arr.length - 1 !== index ? \",\" : \"\"}&nbsp;&nbsp;</p>\r\n            </Link>\r\n        }\r\n    },\r\n    slug\r\n}: pairProps) => (\r\n    <div className=\"flex text-base\">\r\n        <p className=\"text-gray-500 font-bold mr-2\">{pairKey}: </p>\r\n        {Array.isArray(pairValue) ? (\r\n            <div className={\"text-white flex flex-wrap\"}>\r\n                {pairValue.map((value, index, arr) => {\r\n                    return onValue?.(value, index, arr, slug!, pairKey)\r\n                })}\r\n            </div>\r\n        ) : (\r\n            <p className=\"text-white\">{pairValue}</p>\r\n        )}\r\n    </div>\r\n);\r\n\r\nconst Info = () => {\r\n    const { slug } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const select = useSelector((state: RootState) => state);\r\n\r\n    const item = select.viewMore.find(item => item.slug == slug);\r\n    var item2 = select.episode.find(item => item.slug == slug);\r\n    if (!item2) {\r\n        item2 = {\r\n            name: '',\r\n            slug: '',\r\n            index: 0\r\n        }\r\n    }\r\n    const navigate = useNavigate();\r\n    if (!slug) {\r\n        navigate('/');\r\n    }\r\n\r\n    const handleError = (e: any) => {\r\n        e.target.src = '/default.png';\r\n    }\r\n\r\n    const [viewMore, setViewMore] = useState<boolean>(item ? item.viewMore : false);\r\n    const setviewmore = () => {\r\n        setViewMore(!viewMore);\r\n        dispatch({ type: 'changeViewMore', payload: { slug: slug, viewMore: !viewMore } })\r\n    }\r\n\r\n    const { data: info, isLoading } = useFetchInfo(slug!);\r\n\r\n    const [final, setFinal] = useState<boolean>(isLoading ? false : true);\r\n\r\n    const { data: infoWatch, isLoading: isInfoLoading } = useFetchWatchInfo(slug!);\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            const hihi = new Image();\r\n            const haha = new Image();\r\n            hihi.src = info?.image!;\r\n            haha.src = info?.backgroundImage!;\r\n            const images = [hihi, haha];\r\n            var imageCount = images.length;\r\n            var imagesLoaded = 0;\r\n            for (var i = 0; i < imageCount; i++) {\r\n                images[i].onload = function () {\r\n                    imagesLoaded++;\r\n                    if (imagesLoaded == imageCount) {\r\n                        allLoaded();\r\n                    }\r\n                }\r\n                images[i].onerror = () => {\r\n                    allLoaded();\r\n                }\r\n            }\r\n            const allLoaded = () => {\r\n                setFinal(true);\r\n            }\r\n        }\r\n    }, [isLoading]);\r\n\r\n    useEffect(() => {\r\n        isLoading && setFinal(false);\r\n        window.scroll(0, 0); //cùng 1 component thì hoạt động, nếu từ component này sang component khác thì ko hoạt động\r\n    }, [slug])\r\n\r\n    useEffect(() => {\r\n        if (info) {\r\n            document.title = info.title + ' - AniMAX';\r\n        }\r\n    }, [info])\r\n\r\n    if (!final) return <>\r\n        <ProgressBarLoading />\r\n        <Loader />\r\n    </>;\r\n\r\n    return (final) && (\r\n        <div className=\"w-full flex flex-col\">\r\n            <div className=\"relative w-full self-center\">\r\n                <img\r\n                    onError={(e) => handleError(e)}\r\n                    src={info?.backgroundImage}\r\n                    alt={info?.title}\r\n                    className=\"object-cover w-full max-h-106 min-h-106\"\r\n                />\r\n                <div className=\"flex absolute inset-0 bg-black bg-opacity-80 max-h-106\">\r\n                    <div className=\"flex w-full px-8 md:py-6 lg:py-14 self-center\">\r\n                        <img\r\n                            onError={(e) => handleError(e)}\r\n                            src={info?.image}\r\n                            alt={info?.title}\r\n                            className=\"object-cover min-w-36 h-40 md:w-72 md:h-80 lg:w-80 lg:h-96 self-center rounded-md\"\r\n                        />\r\n                        <div className=\"w-full self-center space-y-2 ml-8\">\r\n                            <div>\r\n                                <h1 className=\" text-three text-sm md:text-2xl lg:text-3xl line-clamp-2 md:line-clamp-none font-bold\">\r\n                                    {info?.title}\r\n                                    <span className='text-white'>{' (' + info?.date + ')'}</span>\r\n                                </h1>\r\n                                <h1 className=\"text-white text-xs md:text-sm lg:text-lg line-clamp-1 font-bold\">\r\n                                    {info?.altTitle}\r\n                                </h1>\r\n                            </div>\r\n                            <ul className='genres text-white flex text-sm flex-wrap'>\r\n                                {\r\n                                    info?.genres.map(genre => (\r\n                                        <Link key={genre.name} to={`/${genre.path.includes('the-loai') ? 'genres' : 'types'}/${genre.slug}`}><li className='mr-3 border-2 rounded-full px-3 pb-0.5 text-xs md:text-sm mb-2 hover:text-five hover:border-five transition-colors'>{genre.name}</li></Link>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                            <p className=\"text-gray-400 font-bold text-xs md:text-sm lg:text-base md:line-clamp-3 lg:line-clamp-5 mb-2 max-h-64 overflow-y-scroll\">\r\n                                {info?.description}\r\n                            </p>\r\n\r\n                            <Button\r\n                                className={`${info?.episodes.length !== 0 ? 'bg-primary' : 'bg-gray-500'} text-white mt-4 `}\r\n                                iconClassName=\"hidden lg:block text-white\"\r\n                                startIcon={BsPlayFill}\r\n                                to={`/watch/${slug}`}\r\n                                onClick={() => dispatch({ type: 'EPISODE', payload: { name: infoWatch?.episodes[0].name, slug: slug } })}\r\n                                disabled={info?.episodes.length !== 0 ? false : true}\r\n                            >\r\n                                Watch Now\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='eps text-white mt-5'>\r\n                <h3 className='mb-2 text-lg'>Tập phim </h3>\r\n                {\r\n                    isInfoLoading && <ImSpinner2 size={20} className='mx-auto my-2 animate-spin' />\r\n                }\r\n                <ul className={classNames('flex flex-wrap justify-start', !viewMore && 'max-h-60 overflow-hidden')}>\r\n                    {\r\n                        infoWatch?.episodes.length !== 0 ? infoWatch?.episodes.map(episode => (\r\n                            <Link className='mb-2' to={`/watch/${slug}`} key={episode.id}><li onClick={() => { dispatch({ type: 'EPISODE', payload: { name: episode.name, slug: slug } }) }} className={classNames('mr-2 rounded-sm px-4 py-2 hover:bg-red-600 transition-colors', item2.name === episode.name ? \"bg-red-600\" : \"bg-four\")}>{episode.name}</li></Link>\r\n                        )) : \"Phim đang được cập nhật.\"\r\n                    }\r\n                </ul>\r\n                <button className={classNames('mt-3 flex justify-center w-full', (infoWatch?.episodes.length! <= 120 || isInfoLoading) && 'hidden')} onClick={() => setviewmore()}>{viewMore ? <IoIosArrowDropupCircle size={40} className='hover:text-secondary' /> : <IoIosArrowDropdownCircle size={40} className='hover:text-secondary' />}</button>\r\n            </div>\r\n\r\n            <div id='thongtinphim' className=' text-white mt-5'>\r\n                <h3 className='mb-2 text-lg'>Thông tin phim</h3>\r\n                <div className=\"space-y-1\">\r\n                    <Pair pairKey=\"Lịch chiếu\" pairValue={info?.showtime} />\r\n                    <Pair pairKey=\"Trạng thái\" pairValue={info?.status} />\r\n                    <Pair pairKey=\"Đạo diễn\" pairValue={info?.directors} />\r\n                    <Pair pairKey=\"Quốc gia\" pairValue={info?.nations} />\r\n                    <Pair pairKey=\"Theo dõi\" pairValue={info?.followers} />\r\n                    <Pair pairKey=\"Thời lượng\" pairValue={info?.time} />\r\n                    <Pair pairKey=\"Độ tuổi\" pairValue={info?.rating} />\r\n                    <Pair pairKey=\"Ngôn ngữ\" pairValue={info?.language} />\r\n                    <Pair pairKey=\"Studio\" pairValue={info?.studio} />\r\n                    <Pair pairKey=\"Season\" pairValue={info?.seasons} />\r\n                    <Pair pairKey=\"Chất lượng\" pairValue={info?.quality} />\r\n                    <Pair pairKey=\"Views\" pairValue={info?.views} />\r\n                    <Pair pairKey=\"Parts\" pairValue={info?.includedParts} slug={slug} />\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                info?.relatedAnime.length != 0 && <Section title='Phim liên quan' isLoading={false} data={info?.relatedAnime} className='text-lg' />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Info;"],"sourceRoot":""}