{"version":3,"sources":["utils/ProgressBar.tsx","components/HomePage/TextIcon.tsx","components/BrowserPage/AnimeCard.tsx","components/HomePage/Carousel.tsx","components/HomePage/Carousel2.tsx","components/HomePage/Section.tsx","apis/useFetchSlide.ts","components/HomePage/Slide.tsx","apis/useFetchList.ts","components/HomePage/index.tsx","pages/Home.tsx"],"names":["ProgressBar","config","barColors","ProgressBarLoading","TextIcon","props","iconSize","Icon","icon","className","iconClassName","textClassName","text","classNames","size","AnimeCard","pathname","useLocation","isSliding","useSelector","state","sliding","conditions","conditions2","to","slug","onClick","e","event","preventDefault","onError","target","src","handleError","image","alt","title","classNameImg","isUpcoming","upcomingYear","AiFillStar","stars","toString","some","el","time","includes","currentEpisode","style","quality","isCompleted","BiTime","date","AiOutlineCalendar","views","GrView","toLocaleString","description","NextArrow","borderRadius","position","top","transform","PrevArrow","Carousel","defaultSettings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","autoplay","beforeChange","dispatch","type","payload","afterChange","settings","useDispatch","children","Carousel2","responsive","breakpoint","data","finalSettings","map","anime","Section","isLoading","useFetchSlide","useQuery","getSlide","Slide","AiFillVideoCamera","studio","AiOutlineUnorderedList","genres","name","join","useFetchList","category","getList","Index","memo","slides","isSlideLoading","latestList","isLatestLoading","upcomingList","isUpcomingLoading","decuList","isDecuLoading","useEffect","window","scroll","slide","key","Home","document","HomePage"],"mappings":"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","file":"static/js/8.244d13f4.chunk.js","sourcesContent":["import ProgressBar from \"react-topbar-progress-indicator\";\r\n\r\nProgressBar.config({\r\n    barColors: {\r\n        \"0\": \"#ff0000\",\r\n    },\r\n});\r\n\r\nconst ProgressBarLoading = () => {\r\n    return <ProgressBar />;\r\n};\r\n\r\nexport default ProgressBarLoading;","import React from 'react';\r\nimport classNames from \"classnames\";\r\n\r\ninterface TextIconProps {\r\n    className?: string;\r\n    textClassName?: string;\r\n    iconClassName?: string;\r\n    icon: React.ComponentType<{ className?: string; size: number }>;\r\n    text: string;\r\n    iconSize?: number;\r\n}\r\n\r\nconst TextIcon = (props: TextIconProps) => {\r\n    const {\r\n        iconSize = 16,\r\n        icon: Icon,\r\n        className,\r\n        iconClassName,\r\n        textClassName,\r\n        text,\r\n    } = props;\r\n\r\n    return (\r\n        <div className={classNames(\"flex items-center\", className)}>\r\n            <Icon size={iconSize} className={iconClassName} />\r\n            <p className={classNames(\"line-clamp-1 pl-1 pt-0.5\", textClassName)}>{text}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextIcon;","import classNames from 'classnames';\r\nimport { AiFillStar, AiOutlineCalendar } from 'react-icons/ai';\r\nimport { BiTime } from 'react-icons/bi';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { RootState } from '../../reducers';\r\nimport { Anime } from '../../types';\r\nimport TextIcon from '../HomePage/TextIcon';\r\nimport { useSelector } from 'react-redux';\r\nimport { BsPlayCircle } from 'react-icons/bs';\r\nimport { GrView } from 'react-icons/gr';\r\n\r\ninterface AnimeCardProps extends Anime {\r\n    className?: string;\r\n    onClick?: () => void;\r\n    classNameImg?: string;\r\n}\r\nconst AnimeCard = (props: AnimeCardProps) => {\r\n    const { pathname } = useLocation();\r\n\r\n    const isSliding: boolean = useSelector((state: RootState) => state.sliding);\r\n    const handleOnClick = (event: any) => {\r\n        if (isSliding) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n    const conditions = [\"giờ\", \"phút\", \"Giờ\", \"Phút\"];\r\n    const conditions2 = [\"HD\", \"BD\", \"FHD\"];\r\n    const handleError = (e: any) => {\r\n        e.target.src = '/default.png';\r\n    }\r\n\r\n    return (\r\n        <Link to={`/info/${props.slug}`} onClick={e => handleOnClick(e)}>\r\n            <div className={classNames(\"relative shadow-lg group\", props.className)}>\r\n                <img\r\n                    onError={(e) => handleError(e)}\r\n                    src={props.image}\r\n                    alt={props.title}\r\n                    className={classNames(\r\n                        \"w-full h-48 md:h-60 object-cover rounded-md rounded-b-none\",\r\n                        props.classNameImg ? props.classNameImg : 'lg:h-80'\r\n                    )}\r\n                // loading='lazy'\r\n                />\r\n\r\n                {props.isUpcoming && (\r\n                    <div className=\"absolute inset-0 bg-black bg-opacity-60 flex items-center justify-center\">\r\n                        <p className=\"text-white text-3xl font-bold\">\r\n                            {props.upcomingYear}\r\n                        </p>\r\n                        <h1 className='font-bold z-10 absolute bottom-0 p-2 bg-red-500 w-full text-center bg-opacity-80'>SẮP CHIẾU</h1>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"absolute inset-0 invisible group-hover:visible bg-black bg-opacity-60 flex items-center justify-center\">\r\n                    <BsPlayCircle size={70} className=\"text-white\" />\r\n                </div>\r\n\r\n                <div className=\"absolute top-2 z-10 left-2 bg-black px-3 py-1 rounded-2xl text-white text-xs bg-opacity-70\">\r\n                    <TextIcon icon={AiFillStar} text={props.stars.toString()} className='text-base text-yellow-200'></TextIcon>\r\n                </div>\r\n                {\r\n                    !props.isUpcoming && <div className={classNames(\"absolute top-2 right-2 text-white text-xs text-center\", conditions.some(el => props.time?.includes(el)) || props.currentEpisode === '' || conditions2.some(el => props.currentEpisode?.includes(el)) ? ' bg-three rounded-md w-auto px-2' : 'bg-red-500 rounded-full w-12 px-1 pt-3 py-1 h-12')} style={{ \"lineHeight\": '0.5em' }}>\r\n                        {\r\n                            conditions.some(el => props.time?.includes(el)) || props.currentEpisode === '' || conditions2.some(el => props.currentEpisode?.includes(el)) ?\r\n                                <span className='text-base text-black font-thin'>{props.quality || props.currentEpisode}</span>\r\n                                :\r\n                                (props.isCompleted) ?\r\n                                    <>HOÀN <span className='font-bold text-lg'>TẤT</span></>\r\n                                    :\r\n                                    <>TẬP <span className='font-bold text-lg'>{props.currentEpisode}</span></>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div\r\n                className={classNames(\r\n                    \"bg-background-darker p-3 w-full space-y-2 rounded-b-md\",\r\n                    pathname.includes('info') ? 'max-h-20 min-h-5' : 'max-h-20 min-h-11'\r\n                )}\r\n            >\r\n                <p className={classNames(\"uppercase text-white font-bold text-sm hover:text-three\", pathname.includes('info') ? 'line-clamp-2' : 'line-clamp-1')} title={props.title}>\r\n                    {props.title}\r\n                </p>\r\n\r\n                <div className=\"space-y-1\">\r\n                    <div className=\"flex items-center\">\r\n                        {/* <TextIcon\r\n                            icon={AiFillStar}\r\n                            iconClassName=\"text-yellow-400 mr-1\"\r\n                            text={props.stars.toString()}\r\n                            textClassName=\"text-yellow-400 text-xs\"\r\n                            iconSize={12}\r\n                        /> */}\r\n\r\n                        {props.time && (\r\n                            <TextIcon\r\n                                // className=\"ml-2\"\r\n                                icon={BiTime}\r\n                                iconClassName=\"text-gray-400 mr-1\"\r\n                                text={props.time.includes('Chưa') ? '...' : props.time}\r\n                                textClassName=\"text-white text-xs\"\r\n                                iconSize={12}\r\n                            />\r\n                        )}\r\n\r\n                        <p className=\"px-2 ml-2 text-xs font-medium bg-primary text-white rounded-md mt-0.5\">\r\n                            {props.quality?.includes('Chưa') ? '?' : props.quality}\r\n                        </p>\r\n\r\n                        {props.date && (\r\n                            <TextIcon\r\n                                icon={AiOutlineCalendar}\r\n                                iconClassName=\"text-gray-400 mr-1 ml-2\"\r\n                                text={props.date}\r\n                                textClassName=\"text-white text-xs\"\r\n                                iconSize={12}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <div className='flex items-center'>\r\n                        {props.views && (\r\n                            <TextIcon\r\n                                // className=\"ml-2\"\r\n                                icon={GrView}\r\n                                iconClassName=\"text-gray-400 mr-1\"\r\n                                text={'Lượt xem: ' + props.views.toLocaleString()}\r\n                                textClassName=\"text-white text-xs\"\r\n                                iconSize={12}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"text-gray-400 text-xs line-clamp-3\">\r\n                    {props.description}\r\n                </p>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default AnimeCard;","import React, { PropsWithChildren, useEffect } from \"react\";\r\nimport Slider, { Settings } from \"react-slick\";\r\nimport { BsChevronLeft, BsChevronRight } from \"react-icons/bs\";\r\nimport classNames from \"classnames\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\ninterface CarouselProps {\r\n    settings?: Settings;\r\n}\r\n\r\ninterface ArrowButtonProps {\r\n    onClick?: () => void;\r\n}\r\n\r\nfunction NextArrow(props: ArrowButtonProps) {\r\n    const { onClick } = props;\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                \"bg-black -right-6 transform p-3 cursor-pointer z-10\"\r\n            )}\r\n            style={{\r\n                borderRadius: \"50%\",\r\n                position: 'absolute',\r\n                top: ' 46%',\r\n                transform: 'translate(0, -50%)'\r\n            }}\r\n            onClick={onClick}\r\n        >\r\n            <BsChevronRight size={20} className=\"text-white hover:text-secondary\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction PrevArrow(props: ArrowButtonProps) {\r\n    const { onClick } = props;\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                \"bg-black -left-6 transform p-3 cursor-pointer z-10\"\r\n            )}\r\n            style={{\r\n                borderRadius: \"50%\",\r\n                position: 'absolute',\r\n                top: ' 46%',\r\n                transform: 'translate(0, -50%)'\r\n            }}\r\n            onClick={onClick}\r\n        >\r\n            <BsChevronLeft size={20} className=\"text-white hover:text-secondary\" />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst Carousel = (props: PropsWithChildren<CarouselProps>) => {\r\n    const defaultSettings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        nextArrow: <NextArrow />,\r\n        prevArrow: <PrevArrow />,\r\n        autoplay: true,\r\n        beforeChange: () => {\r\n            dispatch({ type: 'changeSliding', payload: true })\r\n        },\r\n        afterChange: () => {\r\n            dispatch({ type: 'changeSliding', payload: false })\r\n        }\r\n    };\r\n    const settings = { ...defaultSettings, ...props.settings };\r\n    var dispatch = useDispatch();\r\n\r\n    return <Slider {...settings}>{props.children}</Slider>;\r\n};\r\n\r\nexport default Carousel;\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Settings } from \"react-slick\";\r\nimport { Anime } from \"../../types\";\r\nimport AnimeCard from \"../BrowserPage/AnimeCard\";\r\nimport Carousel from './Carousel';\r\n\r\nimport './Carousel2.css';\r\n\r\ninterface AnimeCarouselProps {\r\n    settings?: Settings;\r\n    data?: Anime[];\r\n    onClick?: () => void;\r\n}\r\n\r\nconst Carousel2 = (props: PropsWithChildren<AnimeCarouselProps>) => {\r\n    const location = useLocation();\r\n    const defaultSettings = {\r\n        slidesToShow: location.pathname.includes('info') ? 7 : 6,\r\n        slidesToScroll: 6,\r\n        infinite: false,\r\n        dots: false,\r\n        autoplay: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 4,\r\n                },\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 3,\r\n                },\r\n            },\r\n            {\r\n                breakpoint: 600,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 2,\r\n                },\r\n            },\r\n        ],\r\n    };\r\n    const { data = [], settings, onClick } = props;\r\n    const finalSettings = { ...defaultSettings, ...settings };\r\n\r\n    return (\r\n        <Carousel settings={finalSettings}>\r\n            {\r\n                data.map(anime => (\r\n                    <AnimeCard key={anime.slug} {...anime} classNameImg=' lg:h-72' />\r\n                ))\r\n            }\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nexport default Carousel2;","import classNames from \"classnames\";\r\nimport { ImSpinner, ImSpinner2 } from \"react-icons/im\";\r\nimport { Anime } from \"../../types\";\r\nimport ProgressBarLoading from \"../../utils/ProgressBar\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Carousel2 from \"./Carousel2\";\r\n\r\ninterface SectionProps {\r\n    title: string;\r\n    data?: Anime[];\r\n    isLoading: boolean;\r\n    className?: string;\r\n    onClick?: () => void;\r\n}\r\nconst Section = (props: SectionProps) => {\r\n    const { title, data = [], isLoading = false, className = 'text-2xl font-bold', onClick } = props;\r\n\r\n    return (\r\n        <div className=\"mt-6\">\r\n            <h1 className={classNames(\"text-white font-medium mb-3 -ml-2 pl-2\", className)}>{title}</h1>\r\n            {isLoading ? <><ImSpinner2 size={20} className=\"text-white animate-spin mx-auto my-5\" /><ProgressBarLoading /></> : <Carousel2 data={data} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Section;","import { getSlide } from \"./anime\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nconst useFetchSlide = () => {\r\n    return useQuery(\"slides\", getSlide); //ko có đối số truyền vào thì viết kiểu này\r\n}\r\n\r\nexport default useFetchSlide;","import {\r\n    AiFillStar,\r\n    AiFillVideoCamera,\r\n    AiOutlineCalendar,\r\n    AiOutlineUnorderedList,\r\n} from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextIcon from './TextIcon';\r\nimport { BiTime } from \"react-icons/bi\";\r\nimport { Anime } from \"../../types\";\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from \"../../reducers\";\r\n\r\nconst Slide = (props: Anime) => {\r\n    const isSliding: boolean = useSelector((state: RootState) => state.sliding);\r\n    const handleOnClick = (event: any) => {\r\n        if (isSliding) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Link to={`/info/${props.slug}`} key={props.slug} onClick={e => handleOnClick(e)}>\r\n            <div className=\"relative slide-anime-image\">\r\n                <div className=\"absolute inset-0 bg-gradient-to-b from-transparent to-black bg-opacity-80\">\r\n                    <div className=\"absolute bottom-0 w-2/3 space-y-2 p-6\">\r\n                        <h1 className=\"text-white text-3xl line-clamp-2 font-bold\">\r\n                            {props.title}\r\n                        </h1>\r\n\r\n                        <div className=\"flex items-center\">\r\n                            <TextIcon\r\n                                icon={AiFillStar}\r\n                                iconClassName=\"text-three mr-1\"\r\n                                text={props.stars.toString()}\r\n                                textClassName=\"text-three text-sm\"\r\n                            />\r\n\r\n                            <TextIcon\r\n                                className=\"mx-2\"\r\n                                icon={BiTime}\r\n                                iconClassName=\"text-gray-400 mr-1\"\r\n                                text={props.time!}\r\n                                textClassName=\"text-white text-sm\"\r\n                            />\r\n\r\n                            <TextIcon\r\n                                className=\"mx-2\"\r\n                                icon={AiOutlineCalendar}\r\n                                iconClassName=\"text-gray-400 mr-1\"\r\n                                text={props.date!}\r\n                                textClassName=\"text-white text-sm\"\r\n                            />\r\n\r\n                            <p className=\"px-2 py-1 text-xs font-medium bg-primary text-white rounded-md\">\r\n                                {props.quality}\r\n                            </p>\r\n                        </div>\r\n\r\n                        <p className=\"text-gray-400 line-clamp-4\">{props.description}</p>\r\n\r\n                        <div>\r\n                            <TextIcon\r\n                                icon={AiFillVideoCamera}\r\n                                iconClassName=\" text-three mr-1\"\r\n                                text={`Studio: ${props.studio}`}\r\n                                textClassName=\"text-white text-sm\"\r\n                            />\r\n                            <TextIcon\r\n                                icon={AiOutlineUnorderedList}\r\n                                iconClassName=\"text-three mr-1\"\r\n                                text={`Thể loại: ${props.genres\r\n                                    ?.map(({ name }) => name)\r\n                                    .join(\", \")}`}\r\n                                textClassName=\"text-white text-sm\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <img\r\n                    src={props.image}\r\n                    key={props.slug}\r\n                    alt={props.title}\r\n                    className=\"rounded-md w-full h-full object-cover\"\r\n                />\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Slide;","import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { getList } from './anime';\r\n\r\n//list & search infinity scroll\r\nconst useFetchList = (category: string, slug: string) => {\r\n    return useQuery([category, slug], () => getList({category, slug}));\r\n};\r\n\r\nexport default useFetchList;","import useFetchSlide from '../../apis/useFetchSlide';\r\nimport { memo, useEffect } from 'react';\r\nimport Loader from '../Loader/Loader';\r\nimport Slide from './Slide';\r\nimport Carousel from './Carousel';\r\nimport Section from './Section';\r\nimport useFetchList from '../../apis/useFetchList';\r\nimport ProgressBarLoading from '../../utils/ProgressBar';\r\nimport useFetchSearch from '../../apis/useFetchSearch';\r\n\r\nconst Index = memo(() => {\r\n    const { data: slides, isLoading: isSlideLoading } = useFetchSlide(); // => data as slides (dùng với tên slides)\r\n\r\n    const { data: latestList, isLoading: isLatestLoading } = useFetchList('types', 'anime-moi');\r\n    const { data: upcomingList, isLoading: isUpcomingLoading } = useFetchList(\"types\", \"anime-sap-chieu\");\r\n    const { data: decuList, isLoading: isDecuLoading } = useFetchList(\"types\", \"de-cu\");\r\n    \r\n    useEffect(() => {\r\n        window.scroll(0, 0);\r\n    }, [])\r\n\r\n    return (\r\n        <div className='w-full space-y-6'>\r\n            <div className='hidden md:block'>\r\n                {\r\n                    isSlideLoading ? <ProgressBarLoading /> :\r\n                        <Carousel>\r\n                            {slides?.map((slide) => (\r\n                                <Slide {...slide} key={slide.slug} />\r\n                            ))}\r\n                        </Carousel>\r\n                }\r\n            </div>\r\n\r\n            <div className='space-y-6'>\r\n                <Section title='MỚI CẬP NHẬT' data={latestList?.data} isLoading={isLatestLoading} />\r\n            </div>\r\n\r\n            <div className='space-y-6'>\r\n                <Section title='SẮP CHIẾU' data={upcomingList?.data} isLoading={isUpcomingLoading} />\r\n            </div>\r\n\r\n            <div className='space-y-6'>\r\n                <Section title='ĐỀ CỬ' data={decuList?.data} isLoading={isDecuLoading} />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Index;","import React, { useEffect } from 'react';\r\nimport HomePage from '../components/HomePage';\r\n\r\nconst Home = () => {\r\n    useEffect(() => {\r\n        document.title = \"AniMAX\"\r\n    }, [])\r\n\r\n    return (\r\n        <HomePage />\r\n    );\r\n};\r\n\r\nexport default Home;"],"sourceRoot":""}